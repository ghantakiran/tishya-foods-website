version: '3.8'

services:
  # Main application service
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/tishyafoods
      - DIRECT_URL=postgresql://postgres:postgres@db:5432/tishyafoods
      - NEXTAUTH_SECRET=development-secret-key-change-in-production
      - NEXTAUTH_URL=http://localhost:3000
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-}
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY:-}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET:-}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - db
      - redis
    networks:
      - tishya-network
    restart: unless-stopped

  # PostgreSQL database
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: tishyafoods
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tishya-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tishya-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Database admin interface
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db
    networks:
      - tishya-network
    restart: unless-stopped

  # Prisma Studio (database GUI)
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: npx prisma studio --port 5555 --hostname 0.0.0.0
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/tishyafoods
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - db
    networks:
      - tishya-network
    restart: unless-stopped

  # Stripe CLI for webhook testing (optional)
  stripe-cli:
    image: stripe/stripe-cli:latest
    profiles: ["stripe"]
    command: listen --forward-to app:3000/api/payments/webhook
    environment:
      - STRIPE_API_KEY=${STRIPE_SECRET_KEY:-}
      - STRIPE_DEVICE_NAME=docker
    depends_on:
      - app
    networks:
      - tishya-network

volumes:
  postgres_data:
  redis_data:

networks:
  tishya-network:
    driver: bridge