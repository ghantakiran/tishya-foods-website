{
  "mcp.servers": {
    "puppeteer": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-puppeteer"],
      "cwd": "${workspaceFolder}",
      "env": {
        "PUPPETEER_LAUNCH_OPTIONS": "{\"headless\": false, \"args\": [\"--no-sandbox\", \"--disable-setuid-sandbox\"]}",
        "ALLOW_DANGEROUS": "true"
      }
    }
  },
  // TypeScript and JavaScript configurations
  "typescript.preferences.quoteStyle": "single",
  "typescript.suggest.autoImports": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.preferences.includePackageJsonAutoImports": "auto",
  "javascript.preferences.quoteStyle": "single",
  "javascript.suggest.autoImports": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  
  // Editor configurations for better development experience
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "explicit"
  },
  "editor.tabSize": 2,
  "editor.insertSpaces": true,
  "editor.detectIndentation": false,
  "editor.rulers": [80, 120],
  "editor.wordWrap": "bounded",
  "editor.wordWrapColumn": 120,
  "editor.minimap.enabled": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.inlineSuggest.enabled": true,
  "editor.suggestSelection": "first",
  
  // File associations and exclusions
  "files.associations": {
    "*.css": "tailwindcss",
    "*.json": "jsonc"
  },
  "files.exclude": {
    "**/.next": true,
    "**/node_modules": true,
    "**/.git": true,
    "**/.DS_Store": true,
    "**/coverage": true,
    "**/playwright-report": true,
    "**/test-results": true
  },
  "files.watcherExclude": {
    "**/.next/**": true,
    "**/node_modules/**": true,
    "**/coverage/**": true,
    "**/playwright-report/**": true,
    "**/test-results/**": true
  },
  
  // Search configurations
  "search.exclude": {
    "**/.next": true,
    "**/node_modules": true,
    "**/coverage": true,
    "**/playwright-report": true,
    "**/test-results": true,
    "**/*.lock": true
  },
  
  // Tailwind CSS configuration
  "tailwindCSS.includeLanguages": {
    "typescript": "javascript",
    "typescriptreact": "javascript"
  },
  "tailwindCSS.experimental.classRegex": [
    ["cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
    ["cx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"]
  ],
  
  // ESLint configuration
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],
  "eslint.format.enable": true,
  "eslint.codeAction.showDocumentation": {
    "enable": true
  },
  
  // Prettier configuration
  "prettier.enable": true,
  "prettier.requireConfig": false,
  "prettier.tabWidth": 2,
  "prettier.useTabs": false,
  "prettier.singleQuote": true,
  "prettier.semi": true,
  "prettier.trailingComma": "es5",
  
  // Git configuration
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "git.autofetch": true,
  "git.showPushSuccessNotification": true,
  
  // Terminal configuration
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.fontFamily": "MesloLGS NF",
  
  // Error and problem configurations
  "problems.showCurrentInStatus": true,
  "problems.sortOrder": "severity",
  
  // Auto-save configuration
  "files.autoSave": "onFocusChange",
  "files.autoSaveDelay": 1000,
  
  // Extension specific settings
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "typescript": "typescriptreact"
  },
  "emmet.triggerExpansionOnTab": true,
  
  // JSON schema validation
  "json.schemas": [
    {
      "fileMatch": ["package.json"],
      "url": "https://json.schemastore.org/package.json"
    },
    {
      "fileMatch": ["tsconfig*.json"],
      "url": "https://json.schemastore.org/tsconfig.json"
    }
  ],
  
  // Debug configuration hints
  "debug.console.fontSize": 14,
  "debug.internalConsoleOptions": "openOnSessionStart",
  "debug.showBreakpointsInOverviewRuler": true,
  
  // Performance settings
  "typescript.disableAutomaticTypeAcquisition": false,
  "typescript.tsc.autoDetect": "on",
  "npm.autoDetect": "on",
  "extensions.autoUpdate": false
}